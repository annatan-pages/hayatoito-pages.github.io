.. -*- mode: rst; coding: utf-8 -*-

=======================================================================
 SRM349 FizzBuzz問題が簡単すぎるそんなあなたへ。「赤いマーブル問題」。
=======================================================================

:slug: srm349
:date: 2007-05-18

.. meta::
  :edituri: http://www.blogger.com/feeds/15880554/posts/default/2424524944487624606
  :published: 2007-05-18T14:53:54Z
  :tags: topcoder

SRM349__ に挑戦。

__ http://www.topcoder.com/stat?c=round_overview&er=5&rd=10673

今回は、1000点問題が、なかなかいい問題でした。
Division1の人達の多くを見事にひっかけた良問です。
超絶アルゴリズムが必要なわけではなく、最初にちょっとしたアイデアに気付くかどうかで、
十分に解ける問題と化すという、素晴らしい問題だなと。

世間ではFizzBuzz問題がはやっていたようですが、
それに飽きたという方は、この1000点問題
「 赤いマーブル問題__ 」に挑戦してみてください。

__ http://www.topcoder.com/stat?c=problem_statement&pm=6067&rd=10673


  中が見えないバッグに、赤いマーブルがred個、青いマーブルがblue個、入っています。
  あなた(A君)と相手(B君)は、交互に、バッグから1個、あるいは2個、あるいは3個のマーブルをまとめて取り出します。
  取り出したマーブルの色は自分だけでなく相手にも教えてあげます。
  このように交互にマーブルを1個から3個ずつ取り出していき、
  バッグに入っている最後の(ラスト一個の)赤いマーブルを取り出した人が負けになります。

  それでは、ゲームスタートです。
  といいたいところですが、ここで第3者(C君)が現れて、ゲームをはじめる前に、バッグからマーブルを、ランダムにremoved個、取り出してしまいました。
  A君もB君も、取り出されたremoved個のマーブルがそれぞれ何色だったかは教えてもらえませんでした。

  この状態からゲームはスタートします。
  すなわち、A君とB君は、もともとの赤いマーブル, 青いマーブルの個数と, C君が取り出した個数は知っていますが、
  現在のバッグについては、(red + blue - removed)個のマーブルが入っていることがわかっているだけで、どの色がそれぞれ何個入っているかはわかっていません。

  ゲームスタート。最初に取り出しのはあなた(A君)からです。お互いが最適な戦略をとる場合、あなたが勝つ確率はいくつになるでしょうか?

という問題です。

red, blue, removedは、以下の条件を満たすものとします。

* 1<= red <= 100
* 1<= blue <= 100
* removed < red

つまり、ゲーム開始時は、少なくとも1個、赤いマーブルがバッグに残っています。

では、どうぞ!

.. code-block:: java

    public double winningChance(int red, int blue, int removed) {
        ...
    }

ちなみに

* red=1, blue=1, removed=0 の場合は、答えは、0.5
* red=1, blue=2, removed=0 の場合は、答えは、0.33333333333333...
* red=2, blue=1, removed=1 の場合は、答えは、0.5
* red=100, blue=1, removed=99 の場合は、答えは、0.9900990099009901...
* red=100, blue=100, removed=50 の場合は、答えは、0.5379240275007613...

になります。正しく解けたかどうかの検証用にどうぞ。

ちなみに、トップのひとは、この問題を23分で解いています。。。
